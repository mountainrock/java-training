Collection Framework and java.util Interfaces:
1.  What is the Java Collection Framework?
    The Java Collection Framework is a set of classes and interfaces that provide a way to manage and manipulate groups of objects.
2.  Explain the difference between Collection and Collections.
    Collection is an interface that represents a group of objects, while Collections is a class containing utility methods for working with collections.
3.  Name the three main interfaces that extend the Collection interface.
    List, Set, and Queue are the three main interfaces that extend the Collection interface.

List, Set, and Map:
4.  What is the key difference between a List and a Set?
    A List allows duplicate elements and maintains the insertion order, while a Set does not allow duplicates and does not guarantee order.
5.  How is a Set different from a Map?
    A Set contains only values, whereas a Map contains key-value pairs.
6.  Name two classes that implement the List interface.
    ArrayList and LinkedList are classes that implement the List interface.
7.  How do you ensure that elements in a HashSet maintain insertion order?
    You can use a LinkedHashSet, a class that maintains insertion order in addition to the Set behavior.
8.  Explain the purpose of the Map interface and provide an example implementation.
    The Map interface represents a collection of key-value pairs. An example implementation is the HashMap class.


Utility Interfaces and Classes:
9.  What is the purpose of the Comparator interface?
    The Comparator interface defines a method to compare objects and is used for custom sorting in collections.
10.  What is the Iterator interface used for?
     The Iterator interface provides methods to traverse through a collection one element at a time.
11.  Explain the significance of the Comparable interface.
     The Comparable interface is used to define a natural order for objects, allowing them to be sorted using the Collections.sort() method.

List and Set Specific Questions:
12.  How does the ArrayList differ from the LinkedList in terms of performance?
     ArrayList is more efficient for random access and traversal, 
     while LinkedList is better for frequent insertions and deletions.
13.  What is the default sorting order for elements in a TreeSet?
     The default sorting order is natural ordering (ascending) based on the elements' values.

Map Specific Questions:
14.  Explain the difference between HashMap and HashTable.
     HashMap is not synchronized and allows null values,
      while HashTable is synchronized and doesn't allow null keys or values.
15.  How does HashMap ensure fast retrieval of elements?
     HashMap uses hashing to distribute elements across buckets, allowing efficient retrieval using key-based lookups.