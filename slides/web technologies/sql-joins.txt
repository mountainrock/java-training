##  Join Types
In , join operations combine data from two or more tables based on a related column. There are several types of join operations that serve different purposes. Understanding these join types is crucial for retrieving and analyzing data from relational databases effectively.
1. Inner Join
An inner join returns only the matching rows from both tables, excluding non-matching rows.
Syntax:

SELECT columns
FROM table1
INNER JOIN table2 ON table1.column = table2.column;

Example:
Suppose we have two tables, Customers and Orders:
Customers Table:
| CustomerID | CustomerName |
|------------|--------------|
| 1          | Alice        |
| 2          | Bob          |
| 3          | Carol        |
Orders Table:
| OrderID | CustomerID | OrderDate   |
|---------|------------|-------------|
| 101     | 1          | 2023-01-15  |
| 102     | 2          | 2023-02-20  |
| 103     | 1          | 2023-03-10  |

SELECT Customers.CustomerName, Orders.OrderDate
FROM Customers
INNER JOIN Orders ON Customers.CustomerID = Orders.CustomerID;

2. Left Join (or Left Outer Join)
A left join returns all rows from the left table and the matching rows from the right table. If there's no match, NULL values are included.
Syntax:

SELECT columns
FROM table1
LEFT JOIN table2 ON table1.column = table2.column;

Example:

SELECT Customers.CustomerName, Orders.OrderDate
FROM Customers
LEFT JOIN Orders ON Customers.CustomerID = Orders.CustomerID;

3. Right Join (or Right Outer Join)
A right join is similar to a left join but returns all rows from the right table and the matching rows from the left table.
Syntax:

SELECT columns
FROM table1
RIGHT JOIN table2 ON table1.column = table2.column;

Example:

SELECT Customers.CustomerName, Orders.OrderDate
FROM Customers
RIGHT JOIN Orders ON Customers.CustomerID = Orders.CustomerID;

4. Full Outer Join (or Full Join)
A full outer join returns all rows from both tables, along with matching and non-matching rows. If there's no match, NULL values are included.
Syntax:

SELECT columns
FROM table1
FULL JOIN table2 ON table1.column = table2.column;

Example:

SELECT Customers.CustomerName, Orders.OrderDate
FROM Customers
FULL JOIN Orders ON Customers.CustomerID = Orders.CustomerID;

5. Self Join
A self join is a join in which a table is joined with itself. It's useful for querying hierarchical data or relationships within the same table.
Syntax:

SELECT columns
FROM table1 alias1
JOIN table1 alias2 ON alias1.column = alias2.column;

Example:
Suppose we have a Employees table with a ManagerID column referring to another employee:
Employees Table:
| EmployeeID | EmployeeName | ManagerID |
|------------|--------------|-----------|
| 1          | Alice        | NULL      |
| 2          | Bob          | 1         |
| 3          | Carol        | 1         |

SELECT e1.EmployeeName AS Employee, e2.EmployeeName AS Manager
FROM Employees e1
LEFT JOIN Employees e2 ON e1.ManagerID = e2.EmployeeID;

